// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GuildMember {
  id                  Int      @id @default(autoincrement())
  character_name      String
  realm              String
  class              String?
  level              Int?
  item_level         Float?
  mythic_plus_score  Float?
  current_saison     String?  // Current M+ season identifier
  
  // PvP Brackets (separate and clear)
  pvp_2v2_rating     Int?     @default(0)
  pvp_3v3_rating     Int?     @default(0)
  pvp_rbg_rating     Int?     @default(0)
  current_pvp_rating Int      @default(0)  // Keep for backward compatibility
  
  // Solo Shuffle (separate specialization)
  solo_shuffle_rating Int?    @default(0)
  max_solo_shuffle_rating Int? @default(0)
  
  // RBG Shuffle (Blitz mode)
  rbg_shuffle_rating Int?     @default(0)
  
  // Achievement Points
  achievement_points Int?     @default(0)
  
  // Raid progression and activity tracking from PR
  raid_progress      String?  // JSON string storing raid progression data
  last_login_timestamp BigInt? // Unix timestamp from Blizzard API
  activity_status    String   @default("inactive") // 'active', 'inactive'
  last_activity_check DateTime @default(now()) // When we last checked their login
  last_hourly_check  DateTime? // When we last checked hourly sync data (item level, M+, raids)
  last_updated       DateTime @default(now())

  @@unique([character_name, realm])
  @@map("guild_members")
}

model SyncLog {
  id             Int      @id @default(autoincrement())
  timestamp      DateTime @default(now())
  status         String
  message        String?
  character_name String?

  @@map("sync_logs")
}

model DatabaseVersion {
  id          Int      @id @default(autoincrement())
  version     Int
  applied_at  DateTime @default(now())
  description String?

  @@map("database_versions")
}

model SyncError {
  id             Int      @id @default(autoincrement())
  character_name String
  realm          String?
  error_type     String   // 'api_404', 'api_timeout', 'parse_error', etc.
  error_message  String
  service        String   // 'raiderio' or 'blizzard'
  url_attempted  String?
  timestamp      DateTime @default(now())

  @@map("sync_errors")
}
